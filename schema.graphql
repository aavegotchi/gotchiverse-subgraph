# Events
type TransferEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    contract: Bytes
    from: Bytes
    to: Bytes
    tokenId: BigInt
    transaction: Bytes
}

type MintParcelEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    from: Bytes
    to: Bytes
    owner: Bytes
    tokenId: BigInt
    transaction: Bytes
}

type ChannelAlchemicaEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!

    gotchi: Gotchi!
    parcel: Parcel!

    realmId: BigInt
    gotchiId: BigInt

    alchemica: [BigInt!]!
    spilloverRate: BigInt!
    spilloverRadius: BigInt!

    transaction: Bytes
}

type AlchemicaClaimedEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    gotchi: Gotchi
    parcel: Parcel

    realmId: BigInt
    gotchiId: BigInt

    alchemicaType: BigInt
    amount: BigInt

    spilloverRadius: BigInt
    spilloverRate: BigInt
}

type ExitAlchemicaEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes

    gotchi: Gotchi
    alchemica: [BigInt!]!

    gotchiId: BigInt
}

type EquipInstallationEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes

    parcel: Parcel!
    installation: InstallationType!

    x: BigInt!
    y: BigInt!

    realmId: BigInt
    installationId: BigInt
}

type UnequipInstallationEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes

    parcel: Parcel!
    installation: InstallationType!

    x: BigInt!
    y: BigInt!

    realmId: BigInt
    installationId: BigInt
}

type InstallationUpgradedEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes

    parcel: Parcel!
    prevInstallation: InstallationType!
    nextInstallation: InstallationType!

    x: BigInt!
    y: BigInt!

    realmId: BigInt
    prevInstallationId: BigInt
    nextInstallationId: BigInt
}

type UpgradeQueuedEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!

    owner: Bytes!
    realmId: BigInt
    queueIndex: BigInt!

    parcel: Parcel
}

type MintTileEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    owner: Bytes
    tile: TileType
    quantity: Int
}

type MintTilesEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    owner: Bytes
    tile: TileType
    amount: Int
}

type MintInstallationEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    owner: Bytes
    installationType: InstallationType
    quantity: Int
}

type MintInstallationsEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    owner: Bytes
    installationType: InstallationType
    amount: Int
}

type UpgradeInitiatedEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    parcel: Parcel
    installation: InstallationType!
    blockInitiated: BigInt!
    readyBlock: BigInt!

    x: BigInt!
    y: BigInt!

    realmId: BigInt
    installationId: BigInt
}

type AddInstallationTypeEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    installationType: InstallationType
}

type EditInstallationTypeEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    installationType: InstallationType
}

type DeprecateInstallationEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    installationType: InstallationType
}

type EquipTileEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    parcel: Parcel
    tile: Tile
    x: BigInt
    y: BigInt

    realmId: BigInt
    tileId: BigInt
}

type UnequipTileEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes
    parcel: Parcel
    tile: Tile
    x: BigInt
    y: BigInt

    realmId: BigInt
    tileId: BigInt
}

type CraftTimeReducedEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!

    blocksReduced: BigInt!
}

type UpgradeTimeReducedEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    parcel: Parcel!

    x: BigInt!
    y: BigInt!
    blocksReduced: BigInt!

    realmId: BigInt
}

type UpgradeFinalizedEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    parcel: Parcel!
    x: BigInt!
    y: BigInt!
    installation: InstallationType
}

type URIEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!
    tokenId: BigInt!
    value: String
}

type NFTDisplayStatusUpdatedEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!

    token: Bytes
    chainId: Int
    allowed: Boolean
}

type ParcelAccessRightSetEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!

    realmId: Int!
    accessRight: Int!
    actionRight: Int!
}

type ParcelWhitelistSetEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!

    realmId: Int!
    whitelistId: Int!
    actionRight: Int!
}

type EditTileTypeEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!

    tileId: Int
    tileType: TileType

    # param1
    _alchemicaCost: [BigInt!]
    _craftTime: Int
    _deprecated: Boolean
    _height: Int
    _width: Int
    _name: String
}

type EditDeprecateTimeEvent @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!

    newDeprecatetime: BigInt
    tileId: Int
    tileType: TileType

    installationId: Int
    installationType: InstallationType
}

type BounceGateEventStarted @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!

    _eventId: BigInt
    _endTime: BigInt
    _equipped: Boolean
    _lastTimeUpdated: BigInt
    _priority: BigInt
    _startTime: BigInt
    _title: String
}

type BounceGateEventCancelled @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!

    _eventId: BigInt
}

type BounceGateEventPriorityAndDurationUpdated @entity {
    id: ID!
    block: BigInt!
    timestamp: BigInt!
    transaction: Bytes!
    contract: Bytes!

    _eventId: BigInt
    _newPriority: BigInt
    _newEndTime: BigInt
}

type Parcel @entity {
    id: ID!
    equippedInstallations: [InstallationType!]!
    equippedTiles: [TileType!]!
    lastChanneledAlchemica: BigInt
    lastClaimedAlchemica: BigInt
    owner: Bytes

    tokenId: BigInt
    parcelId: String
    coordinateX: BigInt
    coordinateY: BigInt
    district: BigInt
    parcelHash: String

    fudBoost: BigInt
    fomoBoost: BigInt
    alphaBoost: BigInt
    kekBoost: BigInt

    size: BigInt

    accessRights: [ParcelAccessRight!]! @derivedFrom(field: "parcel")

    remainingAlchemica: [BigInt!]!
    surveyRound: Int
}

type ParcelAccessRight @entity {
    id: ID!
    parcel: Parcel!

    whitelistId: Int
    accessRight: Int!
    actionRight: Int!
}

type Gotchi @entity {
    id: ID!
    lastChanneledAlchemica: BigInt
}

type Tile @entity {
    id: ID!
    type: TileType
    x: BigInt
    y: BigInt
    equipped: Boolean
    parcel: Parcel
    owner: Bytes
}

type Installation @entity {
    id: ID!
    type: InstallationType
    x: BigInt
    y: BigInt
    equipped: Boolean
    parcel: Parcel
    owner: Bytes
}

type InstallationType @entity {
    id: ID!
    width: Int
    height: Int
    installationType: Int
    level: Int
    alchemicaType: Int
    spillRadius: BigInt
    spillRate: Int
    upgradeQueueBoost: Int
    craftTime: BigInt
    nextLevelId: BigInt
    deprecated: Boolean
    deprecatedAt: BigInt!
    alchemicaCost: [BigInt!]
    harvestRate: BigInt
    capacity: BigInt
    prerequisites: [BigInt!]
    amountPrerequisites: Int
    name: String
    amount: BigInt!
    uri: String
}

type TileType @entity {
    id: ID!
    width: Int!
    height: Int!
    deprecated: Boolean!
    deprecatedAt: BigInt!
    tileType: Int!
    craftTime: BigInt!
    alchemicaCost: [BigInt!]!
    name: String!
    amount: BigInt!
    uri: String
}

type Stat @entity {
    id: ID!
    countChannelAlchemicaEvents: BigInt!
    countParcelInstallations: BigInt!
    countInstallationTypes: BigInt!
    countUpgradesInitiated: BigInt!

    alchemicaSpendOnInstallations: [BigInt!]!
    alchemicaSpendOnUpgrades: [BigInt!]!
    alchemicaSpendOnTiles: [BigInt!]!
    alchemicaSpendTotal: [BigInt!]!
    alchemicaChanneledTotal: [BigInt!]!
    alchemicaClaimedTotal: [BigInt!]!
    alchemicaExitedTotal: [BigInt!]!

    tilesEquippedTotal: BigInt!
    tilesUnequippedTotal: BigInt!
    tilesEquippedCurrent: BigInt!
    tilesMinted: BigInt!

    installationsMintedTotal: BigInt!
    installationsUpgradedTotal: BigInt!
    installationsEquippedTotal: BigInt!
    installationsUnequippedTotal: BigInt!
    installationsEquippedCurrent: BigInt!

    craftTimeReduced: BigInt!
    upgradeTimeReduced: BigInt!

    gltrSpendOnUpgrades: BigInt
    gltrSpendOnCrafts: BigInt
    gltrSpendTotal: BigInt

    contracts: [Bytes!]!
}

type NFTDisplayStatus @entity {
    id: ID!
    contractAddress: Bytes
    contractId: Int
    chainId: Int
    allowed: Boolean
}

type BounceGateEvent @entity {
    id: ID!
    title: String
    startTime: BigInt
    endTime: BigInt
    priority: BigInt
    equipped: Boolean
    lastTimeUpdated: BigInt
    cancelled: Boolean
    creator: Bytes
}
